(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{216:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"content"},[this._m(0),this._v(" "),this._m(1),s("p",[s("a",{attrs:{href:"https://blog.csdn.net/chengxuyuanyonghu/article/details/74910875",target:"_blank",rel:"noopener noreferrer"}},[this._v("摘自[点击跳转]"),s("OutboundLink")],1)])])},[function(){var t=this.$createElement,s=this._self._c||t;return s("h1",{attrs:{id:"pm2基础命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pm2基础命令","aria-hidden":"true"}},[this._v("#")]),this._v(" pm2基础命令")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("$ pm2 start app"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("js              # 启动app"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("js应用程序\n$ pm2 start app"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("js "),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("i "),a("span",{attrs:{class:"token number"}},[t._v("4")]),t._v("         # cluster mode 模式启动"),a("span",{attrs:{class:"token number"}},[t._v("4")]),t._v("个app"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("js的应用实例\n# "),a("span",{attrs:{class:"token number"}},[t._v("4")]),t._v("个应用程序会自动进行负载均衡\n$ pm2 start app"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("js "),a("span",{attrs:{class:"token operator"}},[t._v("--")]),t._v("name "),a("span",{attrs:{class:"token string"}},[t._v('"api"')]),t._v(" # 启动应用程序并命名为 "),a("span",{attrs:{class:"token string"}},[t._v('"api"')]),t._v("\n$ pm2 start app"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("js "),a("span",{attrs:{class:"token operator"}},[t._v("--")]),t._v("watch      # 当文件变化时自动重启应用\n$ pm2 start script"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sh           # 启动 bash 脚本\n$ pm2 list                      # 列表 "),a("span",{attrs:{class:"token constant"}},[t._v("PM2")]),t._v(" 启动的所有的应用程序\n$ pm2 monit                     # 显示每个应用程序的"),a("span",{attrs:{class:"token constant"}},[t._v("CPU")]),t._v("和内存占用情况\n$ pm2 show "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("app"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("name"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("           # 显示应用程序的所有信息\n$ pm2 logs                      # 显示所有应用程序的日志\n$ pm2 logs "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("app"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("name"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("           # 显示指定应用程序的日志\npm2 flush\n$ pm2 stop all                  # 停止所有的应用程序\n$ pm2 stop "),a("span",{attrs:{class:"token number"}},[t._v("0")]),t._v("                    # 停止 id为 "),a("span",{attrs:{class:"token number"}},[t._v("0")]),t._v("的指定应用程序\n$ pm2 restart all               # 重启所有应用\n$ pm2 reload all                # 重启 cluster mode下的所有应用\n$ pm2 gracefulReload all        # Graceful reload all apps "),a("span",{attrs:{class:"token keyword"}},[t._v("in")]),t._v(" cluster mode\n$ pm2 "),a("span",{attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" all                # 关闭并删除所有应用\n$ pm2 "),a("span",{attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),t._v("                  # 删除指定应用 id "),a("span",{attrs:{class:"token number"}},[t._v("0")]),t._v("\n$ pm2 scale api "),a("span",{attrs:{class:"token number"}},[t._v("10")]),t._v("              # 把名字叫api的应用扩展到"),a("span",{attrs:{class:"token number"}},[t._v("10")]),t._v("个实例\n$ pm2 reset "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("app"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("name"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("          # 重置重启数量\n$ pm2 startup                   # 创建开机自启动命令\n$ pm2 save                      # 保存当前应用列表\n$ pm2 resurrect                 # 重新加载保存的应用列表\n$ pm2 update                    # Save processes"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" kill "),a("span",{attrs:{class:"token constant"}},[t._v("PM2")]),t._v(" and restore processes\n$ pm2 generate                  # Generate a sample json configuration file\npm2 start app"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("js "),a("span",{attrs:{class:"token operator"}},[t._v("--")]),t._v("node"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("args"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),a("span",{attrs:{class:"token string"}},[t._v('"--max-old-space-size=1024"')]),t._v("\n")])])])}],!1,null,null,null);e.options.__file="pm2BasicCommand.md";s.default=e.exports}}]);